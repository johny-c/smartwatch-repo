Display Image {
    Driver 'Image'
    Format 'PPM'
    Size   '256x256'
    Font   '6x8'
    Pixel  '4+1'
    Gap    '-1x-1'
    Border 20
    Foreground '000000cc'
    Background '00000022'
    Basecolor  '80d000'
}

Widget HOST {
    class  'Text'
    expression  uname('nodename')
    width  27
    align  'C'
    update 0
    Background '000066'
    Foreground 'ffffff'
}

Widget UPTIME {
    class 'Text'
    expression uptime('%d days - %H:%M:%S')
    prefix ' Uptime: '
    width 27
    align 'C'
    update 1000
    Background '000066'
    Foreground 'ffffff'
}

Widget LOAD {
    class 'Text'
    expression loadavg(1)
    prefix 'Load: '
    postfix loadavg(1) > 1.0 ? '!' : ' '
    width 12
    precision 2
    align 'R'
    update 2000
}

Widget TIME {
    class 'Text'
    expression strftime('%a, %d.%m.%Y %H:%M:%S',time())
    width 27
    align 'C'
    update 1000
    Background '000066'
    Foreground 'ffffff'
}

Widget DFTITLE {
    class  'Text'
    expression 'Used space:'
    width  11
    align  'L'
    update 0
    Background '000066'
    Foreground 'ffffff'

}

Widget DF1 {
    class  'Text'
    expression 100-statfs('/', 'bavail')*100/statfs('/', 'blocks')
    prefix 'root '
    postfix '%'
    width  11
    align  'L'
    precision 2
    update 4000
}

Widget DF2 {
    class  'Text'
    expression 100-statfs('/', 'bavail')*100/statfs('/', 'blocks')
    prefix 'usb1 '
    postfix '%'
    width  11
    align  'L'
    precision 2
    update 4000
}

Widget DF3 {
    class  'Text'
    expression 100-statfs('/', 'bavail')*100/statfs('/', 'blocks')
    prefix 'usb2 '
    postfix '%'
    width  11
    align  'L'
    precision 2
    update 4000
}

Widget CPU {
    class  'Text'
    expression  'CPU:'
    width  12
    align  'L'
    update 0
    Background '000066'
    Foreground 'ffffff'
}

Widget CPU1 {
    class  'Text'
    expression  proc_stat::cpu('busy',   500)
    prefix 'Busy: '
    postfix '%'
    width  12
    align  'R'
    precision 0
    update 1000
}

Widget BusyBar {
    class 'Bar'
    expression  proc_stat::cpu('busy',   500)
    expression2 proc_stat::cpu('system', 500)
    length 12
    direction 'E'
    update 500
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'

}

Widget MEM {
    class  'Text'
    expression  'Memory       Swap'
    width  25
    align  'L'
    update 0
    Background '000066'
    Foreground 'ffffff'
}

Widget MEM1 {
    class  'Text'
    expression  mf=ceil(meminfo('MemFree')/1024);mt=ceil(meminfo('MemTotal')/1024);mu=mt-mf; mu.'/'.mt
    postfix 'MB'
    width  12
    align  'L'
    update 4000
}

Widget MEM2 {
    class  'Text'
    expression  sf=ceil(meminfo('SwapFree')/1024);st=ceil(meminfo('SwapTotal')/1024);su=st-sf; su.'/'.st
    postfix 'MB'    
    width 12
    align  'L'
    update 4000
}

i2c_sensors-path '/sys/class/hwmon/hwmon0/'
Widget TMP {
    class  'Text'
    expression  'CPU-Temp     MB-Temp'
    width  25
    align  'L'
    update 0
    Background '000066'
    Foreground 'ffffff'
}

Widget TMP1 {
    class      'Text'
    expression  i2c_sensors('temp1_input')
    postfix    '°C'
    width       12
    precision   1
    align      'L'
    update      5000
}

Widget TMP2 {
    class      'Text'
    expression  i2c_sensors('temp2_input')
    postfix    '°C'
    width       12
    precision   1
    align      'L'
    update      5000
}

Widget TASK {
    class 'Text'
    expression file::readline('/tmp/task.log', 1)
    width 25
    align 'M'
    update 20000
}

Display 'Image'
 
Layout Dockstar{
    Row01.Col01  'HOST'
    Row02.Col01  'TIME'

    Row04.Col02  'CPU'
    Row05.Col02	 'CPU1'
    Row06.Col02  'LOAD'
    Row07.Col02  'BusyBar'

    Row04.Col15  'DFTITLE'
    Row05.Col15  'DF1'
    Row06.Col15  'DF2'
    Row07.Col15  'DF3'

    Row08.Col02  'MEM'
    Row09.Col02  'MEM1'
    Row09.Col15  'MEM2'

    Row10.Col02  'TMP'

    Row13.Col02  'TASK'

    Row15.Col01  'UPTIME'
}
 
Layout 'Dockstar'
